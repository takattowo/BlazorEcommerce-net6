@inject IProductService ProductService

@if(ProductService.Products == null || ProductService.Products.Count == 0)
{
    <p>Fetching...</p>
}
else
{
    <div class="container">
        <div class="row">
    @foreach (var book in ProductService.Products)
    {
        <div class="col-md-3">
        <div class="ibox">
            <div class="ibox-content product-box">
                <div class="product-imitation">
                    <img src="@book.ImageUrl" alt="@book.Title" title="@book.Title">
                </div>
                <div class="product-desc">
                    <span class="product-price">
                        @book.Price
                    </span>
                    <small class="text-muted">Category</small>
                    <a href="/product/@book.Id" class="product-name"> @book.Title</a>

                    <div class="small m-t-xs">
                        @book.Description
                    </div>
                </div>
            </div>
        </div>
    </div>

    }
        </div>
    </div>
}

@code {
    private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetProducts();      
    }

}
